import os
import shutil
import requests
import json
import urllib3

# –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è SSL
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
ELASTIC_URL = "https://kibana.vnigma.ru:30006/pdf_docs/_search"
ELASTIC_USER = "kosadmin_user"
ELASTIC_PASSWORD = "Cir73SPb+"
HEADERS = {"Content-Type": "application/json"}

# === –ü–∞–ø–∫–∏ ===
pdf_folder = r"C:\Project1\GITProjects\elastic_docker\–î–æ–∫–∏\ready\3–∫ –º–∞–Ω—É–∞–ª–æ–≤ 2"
ready_folder = os.path.join(pdf_folder, "ready")

# –°–æ–∑–¥–∞—ë–º –ø–∞–ø–∫—É ready, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
if not os.path.exists(ready_folder):
    os.makedirs(ready_folder)
    print(f"üìÇ –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞: {ready_folder}")


def search_document_by_filename(filename_text):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –ª–∏ —É–∫–∞–∑–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –≤ –ø–æ–ª–µ filename –≤ Elasticsearch.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç True, –µ—Å–ª–∏ –Ω–∞–π–¥–µ–Ω, –∏–Ω–∞—á–µ False.
    """
    query = {
        "size": 1,  # –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ 1 —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
        "_source": ["filename"],
        "query": {
            "bool": {
                "should": [
                    {"term": {"filename.keyword": filename_text}},  # –ü–æ–ª–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
                    {"match": {"filename": filename_text}},  # –ì–∏–±–∫–∏–π –ø–æ–∏—Å–∫
                    {
                        "wildcard": {"filename.keyword": f"*{filename_text}*"}
                    },  # –ü–æ–¥—Å—Ç—Ä–æ–∫–∞
                    {
                        "wildcard": {"filename": f"*{filename_text}*"}
                    },  # –ï—â–µ –æ–¥–∏–Ω –≤–∞—Ä–∏–∞–Ω—Ç
                ],
                "minimum_should_match": 1,  # –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ–¥–Ω–æ–≥–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
            }
        },
    }

    try:
        response = requests.get(
            ELASTIC_URL,
            headers=HEADERS,
            auth=(ELASTIC_USER, ELASTIC_PASSWORD),
            data=json.dumps(query),
            verify=False,
        )

        if response.status_code == 200:
            result = response.json()
            hits = result.get("hits", {}).get("hits", [])
            return len(hits) > 0  # –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç True, –µ—Å–ª–∏ —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω

        else:
            print(f"‚ö† –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {response.status_code} - {response.text}")
            return False

    except requests.exceptions.RequestException as e:
        print(f"üö® –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: {e}")
        return False


# === –û–±—Ö–æ–¥ –≤—Å–µ—Ö PDF-—Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ ===
for filename in os.listdir(pdf_folder):
    if filename.lower().endswith(".pdf"):  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ PDF
        file_path = os.path.join(pdf_folder, filename)
        ready_path = os.path.join(ready_folder, filename)

        print(f"\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª: {filename} –≤ Elasticsearch...")

        if search_document_by_filename(filename):  # –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω –≤ Elasticsearch
            print(f"‚úÖ –§–∞–π–ª –Ω–∞–π–¥–µ–Ω! –ü–µ—Ä–µ–º–µ—â–∞–µ–º –≤ {ready_folder}")
            shutil.move(file_path, ready_path)
        else:
            print(f"‚ùå –§–∞–π–ª –ù–ï –Ω–∞–π–¥–µ–Ω –≤ Elasticsearch. –û—Å—Ç–∞–≤–ª—è–µ–º –Ω–∞ –º–µ—Å—Ç–µ.")

print("\nüöÄ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
